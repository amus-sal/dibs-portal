{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-progress-spinner-dialog/app-progress-spinner-dialog.component.ts","./src/app/app-progress-spinner-dialog/app-progress-spinner-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/error-dialog/errordialog.component.ts","./src/app/error-dialog/errordialog.component.html","./src/app/error-dialog/errordialog.service.ts","./src/app/interceptor/httpconfig.interceptor.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/constants.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-app-progress-spinner-dialog',\r\n  templateUrl: './app-progress-spinner-dialog.component.html',\r\n  styleUrls: ['./app-progress-spinner-dialog.component.css']\r\n})\r\nexport class AppProgressSpinnerDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-spinner></mat-spinner>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { \r\n  AuthGuardService as AuthGuard \r\n} from './services/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) ,canActivate: [AuthGuard]},\r\n { path: 'login', loadChildren: () => import('./login/login.module').then(m => m.LoginModule) },\r\n   {\r\n  path: '',\r\n  redirectTo: 'dashboard',\r\n  pathMatch: 'full'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'dibs';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpConfigInterceptor } from './interceptor/httpconfig.interceptor';\r\nimport { ErrorDialogService } from './error-dialog/errordialog.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport {AuthGuardService} from \"./services/auth-guard.service\"\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpConfigInterceptor, multi: true }, ErrorDialogService, AuthService,AuthGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './errordialog.component.html'\r\n})\r\nexport class ErrorDialogComponent {\r\n  title = 'Angular-Interceptor';\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\r\n    console.log(\"error\",data)\r\n  }\r\n}","<div>\r\n    <div>\r\n        <p *ngIf=\"data.status==404\">\r\n            Not valid username or password\r\n        </p>\r\n        <p *ngIf=\"data.status!=404\">\r\n            {{data.reason}}\r\n        </p>\r\n\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ErrorDialogComponent } from './errordialog.component';\r\n\r\n@Injectable()\r\nexport class ErrorDialogService {\r\n    public isDialogOpen: Boolean = false;\r\n    constructor(public dialog: MatDialog) { }\r\n    openDialog(data): any {\r\n        if (this.isDialogOpen) {\r\n            return false;\r\n        }\r\n        this.isDialogOpen = true;\r\n        const dialogRef = this.dialog.open(ErrorDialogComponent, {\r\n            width: '300px',\r\n            data: data\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.isDialogOpen = false;\r\n            let animal;\r\n            animal = result;\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ErrorDialogService } from '../error-dialog/errordialog.service';\r\nimport {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n    constructor(public errorDialogService: ErrorDialogService) { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (navigator.onLine) {\r\n\r\n\r\n            const token: string = localStorage.getItem('token');\r\n            if (token) {\r\n                request = request.clone({ headers: request.headers.set('Authorization', 'bearer ' + token) });\r\n            }\r\n\r\n            if (!request.headers.has('Content-Type')) {\r\n                request = request.clone({ headers: request.headers.set('Content-Type', 'text/plain') });\r\n            }\r\n\r\n            request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n            console.log(request)\r\n            return next.handle(request).pipe(\r\n                map((event: HttpEvent<any>) => {\r\n                    if (event instanceof HttpResponse) {\r\n                        console.log('event--->>>', event);\r\n                    }\r\n                    return event;\r\n                }),\r\n                catchError((error: HttpErrorResponse) => {\r\n                    console.log(error);\r\n                    console.log(error.error.message);\r\n                    let data = {};\r\n                    data = {\r\n                        reason: error.error.message,\r\n                        status: error.status\r\n                    };\r\n\r\n                    this.errorDialogService.openDialog(data)\r\n                    return throwError(error);\r\n                }));\r\n        } else {\r\n            let data = {\r\n                reason: \"no internet connection\",\r\n                status: 0\r\n            };\r\n            this.errorDialogService.openDialog(data)\r\n            return throwError(\"no internet connection\");\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) {}\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginAdmin } from '../models/login';\r\nimport { Constants } from \"./constants\"\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isAuthantcated: boolean = false;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(data: LoginAdmin) {\r\n    data = { username: data.username, password: data.password };\r\n    console.log(data)\r\n\r\n    return this.http.post(Constants.domain + '/admin/signin', data);\r\n  }\r\n\r\n  public getAuthState(): Boolean {\r\n    return this.isAuthantcated;\r\n  }\r\n  public setAuthState(state: boolean): void {\r\n    this.isAuthantcated = state;\r\n  }\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    if (token != null) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","export class Constants {\r\n    public static domain=\"http://138.68.72.29:3000\"\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ErrorDialogComponent } from '../error-dialog/errordialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog'\r\nimport { AppProgressSpinnerDialogComponent } from \"../app-progress-spinner-dialog/app-progress-spinner-dialog.component\";\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [ErrorDialogComponent,\r\n    AppProgressSpinnerDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n\r\n\r\n  ],\r\n  entryComponents: [\r\n    ErrorDialogComponent,\r\n    AppProgressSpinnerDialogComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCHVH4cssAEA7_ihyEcHZ_kAnIQ5y-Ri1U\",\r\n    authDomain: \"dibs-b85f1.firebaseapp.com\",\r\n    databaseURL: \"https://dibs-b85f1.firebaseio.com\",\r\n    projectId: \"dibs-b85f1\",\r\n    storageBucket: \"dibs-b85f1.appspot.com\",\r\n    messagingSenderId: \"329324043466\",\r\n    appId: \"1:329324043466:web:ca10721f52084542902833\",\r\n    measurementId: \"G-TZWQT2RVTG\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}