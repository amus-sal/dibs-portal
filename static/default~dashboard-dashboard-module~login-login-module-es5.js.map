{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js"],"names":["_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","rf","ctx","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r225","_control","placeholder","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r229","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r228","updateOutlineGap","undefined","ctx_r219","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r221","MatFormField_div_13_Template","ctx_r222","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r231","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r223","_c4","_c5","nextUniqueId","MatError","ɵfac","MatError_Factory","t","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","MatError_HostBindings","inputs","propDecorators","args","selector","host","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_elementRef","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaults","_platform","_ngZone","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","controlType","nativeElement","classList","add","stateChanges","pipe","subscribe","_validatePlaceholders","_syncDescribedByIds","markForCheck","ngControl","valueChanges","runOutsideAngular","onStable","asObservable","_prefixChildren","changes","_suffixChildren","_hintChildren","_processHints","_errorChildren","change","requestAnimationFrame","detectChanges","next","complete","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","forEach","hint","ids","_getDisplayedMessages","find","push","map","error","setDescribedByIds","labelEl","children","textContent","trim","isBrowser","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","height","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","Math","abs","i","style","rect","value","right","left","element","getRootNode","rootNode","document","documentElement","contains","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","ɵcmp","contentQueries","MatFormField_ContentQueries","dirIndex","_t","first","viewQuery","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","exportAs","features","provide","useExisting","ngContentSelectors","decls","vars","consts","template","MatFormField_Template","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","styles","encapsulation","data","animation","changeDetection","ctorParameters","decorators","String","descendants","animations","None","OnPush","providers","MatFormFieldModule","ɵmod","ɵinj","factory","MatFormFieldModule_Factory","imports","ngJitMode","declarations","exports","MatSelect_span_4_Template","ctx_r234","MatSelect_span_5_span_1_Template","ctx_r237","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r235","customTrigger","MatSelect_ng_template_8_Template","_r241","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r240","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r242","_handleKeydown","ctx_r236","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","matSelectAnimations","transformPanelWrap","optional","transformPanel","minWidth","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","deps","useFactory","MatSelectChange","source","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_viewportRuler","elementRef","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","defaults","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","ariaLabel","optionSelectionChanges","options","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","emit","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","changed","event","added","select","removed","deselect","_resetOptions","_initializeSelection","updateErrorState","_keyManager","withTypeAhead","_typeaheadDebounceInterval","close","open","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","_isRtl","_setSelectionByValue","fn","isDisabled","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","selected","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","_calculateOverlayOffsetX","panel","scrollTop","Promise","resolve","then","_value","Array","isArray","clear","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","console","warn","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","join","activeOptionIndex","labelCount","optionGroups","_getItemHeight","reduce","result","current","index","itemHeight","items","_getItemCount","panelHeight","min","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","ariaLabelledby","_getAriaLabel","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","rightOverflow","round","updatePosition","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_ariaDescribedby","_placeholder","newValue","writeValue","_id","selectedOptions","reverse","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","toString","_getAriaActiveDescendant","disableRipple","compareWith","errorStateMatcher","outputs","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r232","MatSelectModule","MatSelectModule_Factory"],"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","file":"default~dashboard-dashboard-module~login-login-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r225 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r225._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r229 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r229); const ctx_r228 = ɵngcc0.ɵɵnextContext(); return ctx_r228.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r219 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r219._control.empty && !ctx_r219._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r219._control.empty && !ctx_r219._shouldAlwaysFloat)(\"mat-accent\", ctx_r219.color == \"accent\")(\"mat-warn\", ctx_r219.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r219.appearance != \"outline\")(\"id\", ctx_r219._labelId)(\"ngSwitch\", ctx_r219._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r219._control.id)(\"aria-owns\", ctx_r219._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r219.hideRequiredMarker && ctx_r219._control.required && !ctx_r219._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r221 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r221.color == \"accent\")(\"mat-warn\", ctx_r221.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r222 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r222._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r231 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r231._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r231.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r223 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r223._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r223.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r234 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r234.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r237 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r237.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r235 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r235.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r241 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r241); const ctx_r240 = ɵngcc0.ɵɵnextContext(); return ctx_r240._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r241); const ctx_r242 = ɵngcc0.ɵɵnextContext(); return ctx_r242._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r236 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r236._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r236._transformOrigin)(\"font-size\", ctx_r236._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r236.panelClass)(\"@transformPanel\", ctx_r236.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r232 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r232)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map"]}