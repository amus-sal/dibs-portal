{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-progress-spinner-dialog/app-progress-spinner-dialog.component.ts","webpack:///src/app/app-progress-spinner-dialog/app-progress-spinner-dialog.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error-dialog/errordialog.component.ts","webpack:///src/app/error-dialog/errordialog.component.html","webpack:///src/app/error-dialog/errordialog.service.ts","webpack:///src/app/interceptor/httpconfig.interceptor.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/constants.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppProgressSpinnerDialogComponent","selector","templateUrl","styleUrls","routes","path","loadChildren","m","DashboardModule","canActivate","LoginModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ErrorDialogComponent","data","console","log","ErrorDialogService","dialog","isDialogOpen","dialogRef","open","width","afterClosed","subscribe","result","animal","HttpConfigInterceptor","errorDialogService","request","next","navigator","onLine","token","localStorage","getItem","clone","headers","set","has","handle","pipe","event","error","message","reason","status","openDialog","AuthGuardService","auth","router","isAuthenticated","navigate","AuthService","http","isAuthantcated","username","password","post","domain","state","providedIn","Constants","SharedModule","entryComponents","environment","production","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-app-progress-spinner-dialog',\r\n  templateUrl: './app-progress-spinner-dialog.component.html',\r\n  styleUrls: ['./app-progress-spinner-dialog.component.css']\r\n})\r\nexport class AppProgressSpinnerDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-spinner></mat-spinner>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { \r\n  AuthGuardService as AuthGuard \r\n} from './services/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) ,canActivate: [AuthGuard]},\r\n { path: 'login', loadChildren: () => import('./login/login.module').then(m => m.LoginModule) },\r\n   {\r\n  path: '',\r\n  redirectTo: 'dashboard',\r\n  pathMatch: 'full'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'dibs';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpConfigInterceptor } from './interceptor/httpconfig.interceptor';\r\nimport { ErrorDialogService } from './error-dialog/errordialog.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport {AuthGuardService} from \"./services/auth-guard.service\"\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpConfigInterceptor, multi: true }, ErrorDialogService, AuthService,AuthGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './errordialog.component.html'\r\n})\r\nexport class ErrorDialogComponent {\r\n  title = 'Angular-Interceptor';\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\r\n    console.log(\"error\",data)\r\n  }\r\n}","<div>\r\n    <div>\r\n        <p *ngIf=\"data.status==404\">\r\n            Not valid username or password\r\n        </p>\r\n        <p *ngIf=\"data.status!=404\">\r\n            {{data.reason}}\r\n        </p>\r\n\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ErrorDialogComponent } from './errordialog.component';\r\n\r\n@Injectable()\r\nexport class ErrorDialogService {\r\n    public isDialogOpen: Boolean = false;\r\n    constructor(public dialog: MatDialog) { }\r\n    openDialog(data): any {\r\n        if (this.isDialogOpen) {\r\n            return false;\r\n        }\r\n        this.isDialogOpen = true;\r\n        const dialogRef = this.dialog.open(ErrorDialogComponent, {\r\n            width: '300px',\r\n            data: data\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.isDialogOpen = false;\r\n            let animal;\r\n            animal = result;\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ErrorDialogService } from '../error-dialog/errordialog.service';\r\nimport {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n    constructor(public errorDialogService: ErrorDialogService) { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (navigator.onLine) {\r\n\r\n\r\n            const token: string = localStorage.getItem('token');\r\n            if (token) {\r\n                request = request.clone({ headers: request.headers.set('Authorization', 'bearer ' + token) });\r\n            }\r\n\r\n            if (!request.headers.has('Content-Type')) {\r\n                request = request.clone({ headers: request.headers.set('Content-Type', 'text/plain') });\r\n            }\r\n\r\n            request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n            console.log(request)\r\n            return next.handle(request).pipe(\r\n                map((event: HttpEvent<any>) => {\r\n                    if (event instanceof HttpResponse) {\r\n                        console.log('event--->>>', event);\r\n                    }\r\n                    return event;\r\n                }),\r\n                catchError((error: HttpErrorResponse) => {\r\n                    console.log(error);\r\n                    console.log(error.error.message);\r\n                    let data = {};\r\n                    data = {\r\n                        reason: error.error.message,\r\n                        status: error.status\r\n                    };\r\n\r\n                    this.errorDialogService.openDialog(data)\r\n                    return throwError(error);\r\n                }));\r\n        } else {\r\n            let data = {\r\n                reason: \"no internet connection\",\r\n                status: 0\r\n            };\r\n            this.errorDialogService.openDialog(data)\r\n            return throwError(\"no internet connection\");\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) {}\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginAdmin } from '../models/login';\r\nimport { Constants } from \"./constants\"\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isAuthantcated: boolean = false;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(data: LoginAdmin) {\r\n    data = { username: data.username, password: data.password };\r\n    console.log(data)\r\n\r\n    return this.http.post(Constants.domain + '/admin/signin', data);\r\n  }\r\n\r\n  public getAuthState(): Boolean {\r\n    return this.isAuthantcated;\r\n  }\r\n  public setAuthState(state: boolean): void {\r\n    this.isAuthantcated = state;\r\n  }\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    if (token != null) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","export class Constants {\r\n    public static domain=\"http://138.68.72.29:3000\"\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ErrorDialogComponent } from '../error-dialog/errordialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog'\r\nimport { AppProgressSpinnerDialogComponent } from \"../app-progress-spinner-dialog/app-progress-spinner-dialog.component\";\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [ErrorDialogComponent,\r\n    AppProgressSpinnerDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n\r\n\r\n  ],\r\n  entryComponents: [\r\n    ErrorDialogComponent,\r\n    AppProgressSpinnerDialogComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCHVH4cssAEA7_ihyEcHZ_kAnIQ5y-Ri1U\",\r\n    authDomain: \"dibs-b85f1.firebaseapp.com\",\r\n    databaseURL: \"https://dibs-b85f1.firebaseio.com\",\r\n    projectId: \"dibs-b85f1\",\r\n    storageBucket: \"dibs-b85f1.appspot.com\",\r\n    messagingSenderId: \"329324043466\",\r\n    appId: \"1:329324043466:web:ca10721f52084542902833\",\r\n    measurementId: \"G-TZWQT2RVTG\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}