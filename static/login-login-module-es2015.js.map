{"version":3,"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { LoginAdmin } from '../models/login';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  login: LoginAdmin = {\r\n    username: \"\",\r\n    password: \"\"\r\n  };\r\n  userType: string = \"admin\";\r\n\r\n  loading: boolean = false;\r\n  constructor(private authService: AuthService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  LoginAdmin(admin: NgForm) {\r\n    console.log(this.userType);\r\n    this.loading = true;\r\n    console.log(admin.value)\r\n    if (admin.valid) {\r\n      this.authService.login(this.login).subscribe(response => {\r\n        console.log(\"login response\");\r\n        console.log(response);\r\n        localStorage.setItem(\"token\", response[\"token\"])\r\n        this.router.navigate(['dashboard']);\r\n        this.loading = false\r\n\r\n      }, error => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\nenum UserType {\r\n  admin,\r\n  boxOwner\r\n}","<div class=\"page-container\">\r\n\r\n    <!-- Page content -->\r\n    <div class=\"page-content\">\r\n\r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper\">\r\n\r\n            <!-- Content area -->\r\n            <div class=\"content\">\r\n\r\n                <!-- login form -->\r\n                <form #f=\"ngForm\" action=\"\">\r\n                    <div class=\"panel panel-body login-form\">\r\n                        <div class=\"text-center\">\r\n                            <img src=\"assets/images/image1-30.png\" width=\"110\" />\r\n                            <h5 class=\"content-group\">Login to your account <small class=\"display-block\">Enter your\r\n                                    credentials below</small></h5>\r\n                        </div>\r\n\r\n                        <div class=\"form-group has-feedback has-feedback-left\">\r\n                            <input #username=\"ngModel\" [(ngModel)]=\"login.username\" type=\"text\" name=\"username\" required\r\n                                class=\"form-control\" placeholder=\"Username\">\r\n                            <div class=\"form-control-feedback\">\r\n                                <i class=\"icon-user text-muted\"></i>\r\n                            </div>\r\n                            <span class=\"help-block\" *ngIf=\"username.touched && username.invalid\"> username is\r\n                                required</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group has-feedback has-feedback-left\">\r\n                            <input type=\"text\" required #password=\"ngModel\" name=\"password\" [(ngModel)]=\"login.password\"\r\n                                class=\"form-control\" placeholder=\"Password\">\r\n                            <div class=\"form-control-feedback\">\r\n                                <i class=\"icon-lock2 text-muted\"></i>\r\n                            </div>\r\n                            <span class=\"help-block\" *ngIf=\"password.touched && password.invalid\"> password is\r\n                                required</span>\r\n\r\n                        </div>\r\n                        <div class=\"form-group has-feedback has-feedback-left\">\r\n                            <div style=\"height: 10px;\"></div>\r\n                            <select style=\"width: 200px;height: 21px;\" name=\"userType\" [(ngModel)]=\"userType\"\r\n                                matNativeControl>\r\n                                <option selected value=\"admin\">Admin</option>\r\n                                <option value=\"BoxOwner\">Box Owner</option>\r\n                            </select>\r\n                        </div>\r\n                        <div style=\"text-align: center !important;\" class=\"form-group\">\r\n                            <button *ngIf=\"!loading\" [disabled]=\"f.invalid\" (click)=\"LoginAdmin(f);\"\r\n                                class=\"btn btn-block btn-black\"> Log in\r\n                            </button>\r\n                            <div style=\" width: 100px;\r\n                            height: 100px;\r\n                            display: inline-block;\">\r\n                                <mat-spinner *ngIf=\"loading\" color=\"primery\" diameter=\"30\" mode=\"indeterminate\">\r\n                                </mat-spinner>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <!-- <div class=\"text-center\">\r\n                            <a href=\"forgot-password.html\">Forgot password?</a>\r\n                        </div> -->\r\n                    </div>\r\n                </form>\r\n                <!-- /simple login form -->\r\n\r\n\r\n                <!-- Footer -->\r\n                <div class=\"footer text-muted text-center\">\r\n                    All rights reserved to <a href=\"#\"> Dibs </a> &copy; 20.\r\n                </div>\r\n                <!-- /footer -->\r\n\r\n            </div>\r\n            <!-- /content area -->\r\n\r\n        </div>\r\n        <!-- /main content -->\r\n\r\n    </div>\r\n    <!-- /page content -->\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    FormsModule,\r\n    MatProgressSpinnerModule,\r\n    SharedModule,\r\n    MatSelectModule,\r\n\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}